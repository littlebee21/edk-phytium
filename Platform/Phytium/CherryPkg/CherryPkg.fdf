## @file
# This package provides common open source Phytium Platform modules.
#
# Copyright (C) 2020, Phytium Technology Co, Ltd. All rights reserved.
#
# SPDX-License-Identifier:BSD-2-Clause-Patent
#
##

################################################################################
#
# FD Section
# The [FD] Section is made up of the definition statements and a
# description of what goes into  the Flash Device Image.  Each FD section
# defines one flash "device" image.  A flash device image may be one of
# the following: Removable media bootable image (like a boot floppy
# image,) an Option ROM image (that would be "flashed" into an add-in
# card,) a System "Flash"  image (that would be burned into a system's
# flash) or an Update ("Capsule") image that will be used to update and
# existing system flash.
#
################################################################################

[FD.PHYTIUM]
BaseAddress   = 0x38180000|gArmTokenSpaceGuid.PcdFdBaseAddress
Size          = 0xc00000|gArmTokenSpaceGuid.PcdFdSize
ErasePolarity = 1

# This one is tricky, it must be: BlockSize * NumBlocks = Size
BlockSize     = 0x10000
NumBlocks     = 0xc0

################################################################################
#
# Following are lists of FD Region layout which correspond to the locations of different
# images within the flash device.
#
# Regions must be defined in ascending order and may not overlap.
#
# A Layout Region start with a eight digit hex offset (leading "0x" required) followed by
# the pipe "|" character, followed by the size of the region, also in hex with the leading
# "0x" characters. Like:
# Offset|Size
# PcdOffsetCName|PcdSizeCName
# RegionType <FV, DATA, or FILE>
#
################################################################################

0x00000000|0x300000
gArmTokenSpaceGuid.PcdFvBaseAddress|gArmTokenSpaceGuid.PcdFvSize
FV = FVMAIN_COMPACT

################################################################################
#
# FV Section
#
# [FV] section is used to define what components or modules are placed within a flash
# device file.  This section also defines order the components and modules are positioned
# within the image.  The [FV] section consists of define statements, set statements and
# module statements.
#
################################################################################
[FV.FVMAIN_COMPACT]
BlockSize          = 0x10000
NumBlocks          = 0x30
FvAlignment        = 16
ERASE_POLARITY     = 1
MEMORY_MAPPED      = TRUE
STICKY_WRITE       = TRUE
LOCK_CAP           = TRUE
LOCK_STATUS        = TRUE
WRITE_DISABLED_CAP = TRUE
WRITE_ENABLED_CAP  = TRUE
WRITE_STATUS       = TRUE
WRITE_LOCK_CAP     = TRUE
WRITE_LOCK_STATUS  = TRUE
READ_DISABLED_CAP  = TRUE
READ_ENABLED_CAP   = TRUE
READ_STATUS        = TRUE
READ_LOCK_CAP      = TRUE
READ_LOCK_STATUS   = TRUE
  APRIORI PEI {
    INF MdeModulePkg/Universal/PCD/Pei/Pcd.inf
    #INF MdeModulePkg/Universal/ReportStatusCodeRouter/Pei/ReportStatusCodeRouterPei.inf
    #INF MdeModulePkg/Universal/StatusCodeHandler/Pei/StatusCodeHandlerPei.inf
  }
  #INF ArmPlatformPkg/PrePeiCore/PrePeiCoreMPCore.inf
  INF ArmPlatformPkg/PrePeiCore/PrePeiCoreUniCore.inf
  INF MdeModulePkg/Core/Pei/PeiMain.inf
  INF ArmPkg/Drivers/CpuPei/CpuPei.inf
  INF MdeModulePkg/Universal/FaultTolerantWritePei/FaultTolerantWritePei.inf
  INF MdeModulePkg/Universal/Variable/Pei/VariablePei.inf
  INF $(SILICON_PACKAGE)/PlatformPei/PlatformPeim.inf
  #INF ArmPlatformPkg/PlatformPei/PlatformPeim.inf
  INF ArmPlatformPkg/MemoryInitPei/MemoryInitPeim.inf
  INF MdeModulePkg/Universal/PCD/Pei/Pcd.inf
#  INF MdeModulePkg/Universal/FaultTolerantWritePei/FaultTolerantWritePei.inf
#  INF MdeModulePkg/Universal/Variable/Pei/VariablePei.inf
  #INF MdeModulePkg/Universal/ReportStatusCodeRouter/Pei/ReportStatusCodeRouterPei.inf
  #INF MdeModulePkg/Universal/StatusCodeHandler/Pei/StatusCodeHandlerPei.inf
  INF MdeModulePkg/Core/DxeIplPeim/DxeIpl.inf

  FILE FV_IMAGE = 9E21FD93-9C72-4c15-8C4B-E77F1DB2D792 {
    SECTION GUIDED EE4E5898-3914-4259-9D6E-DC7BD79403CF PROCESSING_REQUIRED = TRUE {
      SECTION FV_IMAGE = FVMAIN
    }
  }

[FV.FvMain]
FvAlignment        = 16         # FV alignment and FV attributes setting.
ERASE_POLARITY     = 1
MEMORY_MAPPED      = TRUE
STICKY_WRITE       = TRUE
LOCK_CAP           = TRUE
LOCK_STATUS        = TRUE
WRITE_DISABLED_CAP = TRUE
WRITE_ENABLED_CAP  = TRUE
WRITE_STATUS       = TRUE
WRITE_LOCK_CAP     = TRUE
WRITE_LOCK_STATUS  = TRUE
READ_DISABLED_CAP  = TRUE
READ_ENABLED_CAP   = TRUE
READ_STATUS        = TRUE
READ_LOCK_CAP      = TRUE
READ_LOCK_STATUS   = TRUE
FvNameGuid         = 87940482-fc81-41c3-87e6-399cf85ac8a0

  APRIORI DXE {
    INF MdeModulePkg/Universal/PCD/Dxe/Pcd.inf
    INF ArmPkg/Drivers/ArmGic/ArmGicDxe.inf
    INF ArmPkg/Drivers/CpuDxe/CpuDxe.inf
    INF $(SILICON_PACKAGE)/Drivers/SpiDxe/SpiDxe.inf
    INF $(SILICON_PACKAGE)/Drivers/SpiNorFlashDxe/SpiNorFlashDxe.inf
    INF $(GENERAL_PACKAGE)/Drivers/FlashFvbDxe/FlashFvbDxe.inf
    INF MdeModulePkg/Core/RuntimeDxe/RuntimeDxe.inf
  }

  INF MdeModulePkg/Core/Dxe/DxeMain.inf
  INF MdeModulePkg/Universal/PCD/Dxe/Pcd.inf

  #
  # PI DXE Drivers producing Architectural Protocols (EFI Services)
  #
  INF ArmPkg/Drivers/CpuDxe/CpuDxe.inf
  INF MdeModulePkg/Core/RuntimeDxe/RuntimeDxe.inf
  INF MdeModulePkg/Universal/SecurityStubDxe/SecurityStubDxe.inf
  INF EmbeddedPkg/RealTimeClockRuntimeDxe/RealTimeClockRuntimeDxe.inf
  INF EmbeddedPkg/ResetRuntimeDxe/ResetRuntimeDxe.inf
  INF EmbeddedPkg/MetronomeDxe/MetronomeDxe.inf

  INF $(SILICON_PACKAGE)/Drivers/SpiDxe/SpiDxe.inf
  INF $(SILICON_PACKAGE)/Drivers/SpiNorFlashDxe/SpiNorFlashDxe.inf

  #
  # UpdateBios
  #
  INF $(SILICON_PACKAGE)/Drivers/UpdateBiosApp/UpdateBiosApp.inf
  #

  INF MdeModulePkg/Universal/CapsuleRuntimeDxe/CapsuleRuntimeDxe.inf
  INF MdeModulePkg/Universal/MonotonicCounterRuntimeDxe/MonotonicCounterRuntimeDxe.inf

  INF ArmPkg/Drivers/TimerDxe/TimerDxe.inf
  INF ArmPkg/Drivers/ArmGic/ArmGicDxe.inf
  INF ArmPkg/Drivers/GenericWatchdogDxe/GenericWatchdogDxe.inf

  #
  # Variable services
  #
  INF MdeModulePkg/Universal/Variable/RuntimeDxe/VariableRuntimeDxe.inf
  INF MdeModulePkg/Universal/FaultTolerantWriteDxe/FaultTolerantWriteDxe.inf
  INF $(GENERAL_PACKAGE)/Drivers/FlashFvbDxe/FlashFvbDxe.inf
  INF MdeModulePkg/Universal/HiiDatabaseDxe/HiiDatabaseDxe.inf

  #
  # Multiple Console IO support
  #
  INF MdeModulePkg/Universal/Console/ConPlatformDxe/ConPlatformDxe.inf
  #INF MdeModulePkg/Universal/Console/ConSplitterDxe/ConSplitterDxe.inf
  #INF MdeModulePkg/Universal/Console/GraphicsConsoleDxe/GraphicsConsoleDxe.inf
  #INF MdeModulePkg/Universal/Console/TerminalDxe/TerminalDxe.inf
  INF $(GENERAL_PACKAGE)/Console/ConSplitterDxe/ConSplitterDxe.inf
  INF $(GENERAL_PACKAGE)/Console/GraphicsConsoleDxe/GraphicsConsoleDxe.inf
  INF $(GENERAL_PACKAGE)/Console/TerminalDxe/TerminalDxe.inf
  INF MdeModulePkg/Universal/SerialDxe/SerialDxe.inf

  #
  # FAT filesystem + GPT/MBR partitioning
  #
  INF MdeModulePkg/Universal/Disk/DiskIoDxe/DiskIoDxe.inf
  INF MdeModulePkg/Universal/Disk/PartitionDxe/PartitionDxe.inf
  INF FatPkg/EnhancedFatDxe/Fat.inf
  INF MdeModulePkg/Universal/Disk/UnicodeCollation/EnglishDxe/EnglishDxe.inf

  #
  # PCI Support
  #
  INF ArmPkg/Drivers/ArmPciCpuIo2Dxe/ArmPciCpuIo2Dxe.inf
  INF MdeModulePkg/Bus/Pci/PciBusDxe/PciBusDxe.inf
  INF MdeModulePkg/Bus/Pci/PciHostBridgeDxe/PciHostBridgeDxe.inf

  #
  # SATA Controller
  #
  INF MdeModulePkg/Bus/Pci/SataControllerDxe/SataControllerDxe.inf
  INF $(SILICON_PACKAGE)/Drivers/SocAhciDxe/SataControllerDxe.inf
  INF MdeModulePkg/Bus/Ata/AtaBusDxe/AtaBusDxe.inf
  INF MdeModulePkg/Bus/Scsi/ScsiBusDxe/ScsiBusDxe.inf
  INF MdeModulePkg/Bus/Scsi/ScsiDiskDxe/ScsiDiskDxe.inf
  INF MdeModulePkg/Bus/Ata/AtaAtapiPassThru/AtaAtapiPassThru.inf
  INF $(SILICON_PACKAGE)/Drivers/SocAtaAtapiPassThru/AtaAtapiPassThru.inf

  #
  #Platform Init Dxe
  #
#!if $(BOARD_TYPE) == "PHYTIUM_A"
#  INF $(PLATFORM_PACKAGE)/Drivers/PlatformDxe/Phytium-A/PlatformDxeA.inf
#!elseif $(BOARD_TYPE) == "PHYTIUM_B"
#  INF $(PLATFORM_PACKAGE)/Drivers/PlatformDxe/Phytium-B/PlatformDxeB.inf
#!elseif $(BOARD_TYPE) == "GW_F080"
#  INF $(PLATFORM_PACKAGE)/Drivers/PlatformDxe/GreatWallF080/PlatformDxe.inf
#!else
#  INF $(PLATFORM_PACKAGE)/Drivers/PlatformDxe/Phytium-A/PlatformDxeA.inf
#!endif
  INF $(PLATFORM_PACKAGE)/Drivers/PlatformDxe/PlatformDxe.inf

!if $(HDA_ENABLE) == TRUE
  INF $(SILICON_PACKAGE)/Drivers/Hda/HdaDxe.inf
!endif

!if $(THUNK_GOP) == TRUE
  INF Drivers/BiosVideoThunkDxe/BiosVideo.inf
!endif
  #
  # NVMe boot devices
  #
  INF MdeModulePkg/Bus/Pci/NvmExpressDxe/NvmExpressDxe.inf

  #
  # Usb Support
  #
!if $(PCI_USB_ENABLE) == TRUE
  INF MdeModulePkg/Bus/Pci/UhciDxe/UhciDxe.inf
  INF MdeModulePkg/Bus/Pci/EhciDxe/EhciDxe.inf
  INF MdeModulePkg/Bus/Pci/XhciDxe/XhciDxe.inf
  INF MdeModulePkg/Bus/Usb/UsbBusDxe/UsbBusDxe.inf
  INF MdeModulePkg/Bus/Usb/UsbKbDxe/UsbKbDxe.inf
  INF MdeModulePkg/Bus/Usb/UsbMouseDxe/UsbMouseDxe.inf
  INF MdeModulePkg/Bus/Usb/UsbMassStorageDxe/UsbMassStorageDxe.inf
!endif

!if $(SOC_USB3_ENABLE) == TRUE
  INF $(SILICON_PACKAGE)/Drivers/SocXhciDxe/XhciDxe.inf
!endif
  INF $(SILICON_PACKAGE)/Drivers/Usb2Dxe/Usb2Dxe.inf

#
# NetWork
#
#
#Gmu Snp
#
!if $(GMU_ENABLE) == TRUE
  INF $(SILICON_PACKAGE)/Drivers/GmuDxe/GmuDxe.inf
  # FILE DRIVER = fbc3aa26-255c-11eb-8468-b7414a1d1438 {
  #   SECTION PE32 = Silicon/Phytium/E2000/GmuDxeEfi/GmuSnpDxe.efi
  #   SECTION UI   = "PhytiumGmuSnp"
  # }
!endif

!if $(NETWORK_ENABLE) == TRUE
  INF NetworkPkg/SnpDxe/SnpDxe.inf
  INF NetworkPkg/DpcDxe/DpcDxe.inf
  INF NetworkPkg/MnpDxe/MnpDxe.inf
  INF NetworkPkg/ArpDxe/ArpDxe.inf
  INF NetworkPkg/Dhcp4Dxe/Dhcp4Dxe.inf
  INF NetworkPkg/Ip4Dxe/Ip4Dxe.inf
  INF NetworkPkg/Mtftp4Dxe/Mtftp4Dxe.inf
  INF NetworkPkg/Udp4Dxe/Udp4Dxe.inf
  INF NetworkPkg/VlanConfigDxe/VlanConfigDxe.inf
  INF NetworkPkg/Ip6Dxe/Ip6Dxe.inf
  INF NetworkPkg/Udp6Dxe/Udp6Dxe.inf
  INF NetworkPkg/Dhcp6Dxe/Dhcp6Dxe.inf
  INF NetworkPkg/Mtftp6Dxe/Mtftp6Dxe.inf
  INF NetworkPkg/TcpDxe/TcpDxe.inf

  INF NetworkPkg/UefiPxeBcDxe/UefiPxeBcDxe.inf

  INF NetworkPkg/DnsDxe/DnsDxe.inf
  INF NetworkPkg/HttpUtilitiesDxe/HttpUtilitiesDxe.inf
  INF NetworkPkg/HttpDxe/HttpDxe.inf
!endif
  #
  #Ps2
  #
!if $(PS2_ENABLE) == TRUE
  INF $(SILICON_PACKAGE)/Drivers/Ps2KeyboardDxe/Ps2KeyboardDxe.inf
  INF $(SILICON_PACKAGE)/Drivers/LpcDxe/LpcDxe.inf
!endif
  #
  #
  # UEFI applications
  #
  INF ShellPkg/Application/Shell/Shell.inf
  INF MdeModulePkg/Application/BootManagerMenuApp/BootManagerMenuApp.inf

  #
  # SMBIOS
  #
  INF MdeModulePkg/Universal/SmbiosDxe/SmbiosDxe.inf
  INF $(PLATFORM_PACKAGE)/Drivers/SmbiosPlatformDxe/SmbiosPlatformDxe.inf

  INF $(GENERAL_PACKAGE)/Setup/PasswordConfigDxe/PasswordConfigUiDxe.inf
  #
  #Gop
  #
!if $(PHYTIUM_GOP) == TRUE
  #INF Silicon/Phytium/E2000/SocGopDxe/PhyGopDxe.inf
  FILE DRIVER = fbc3aa26-c90e-11eb-8468-b7414a1d1438 {
    SECTION PE32 = Silicon/Phytium/E2000/SocGop/PhyGraphicsOutput.efi
    SECTION UI   = "PhytiumSocGop"
  }
!endif
!if $(X100_GOP) == TRUE
  FILE DRIVER = b27ab708-2a90-11ed-b9b9-bf800f6dcc02 {
    SECTION PE32 = Silicon/Phytium/X100/PhyGraphicsOutput_gitcb1b2897_V2_2_20220511_init1024768.efi
    SECTION UI   = "PhytiumX100Gop"
  }
!endif

!if $(E2K_BMC_DEBUG) == TRUE
  INF Silicon/Phytium/E2000/BmcGopDxe/PhyGopDxe.inf
!endif
  #
  #eMMC
  #
!if $(EMMC_ENABLE) == TRUE
  INF $(SILICON_PACKAGE)/Drivers/EmmcHostDxe/EmmcHostDxe.inf
  INF $(SILICON_PACKAGE)/Drivers/MmcDxe/MmcDxe.inf
!endif
  #
  #Bios Update Spi NorFlash
  #
 # INF $(SILICON_PACKAGE)/Drivers/UpdateBiosSpiNorflashApp/UpdateBiosApp.inf


  #
  #Device Tree
  #
!if $(DT_OR_ACPI) == "DT"
  INF EmbeddedPkg/Drivers/DtPlatformDxe/DtPlatformDxe.inf
  FILE FREEFORM = 25462CDA-221F-47DF-AC1D-259CFAA4E326 {
    SECTION RAW = $(PLATFORM_PACKAGE)/DeviceTree/e2000_board.dtb
  }
!elseif $(DT_OR_ACPI) == "ACPI"
  INF MdeModulePkg/Universal/Acpi/AcpiTableDxe/AcpiTableDxe.inf
  INF $(PLATFORM_PACKAGE)/Drivers/AcpiPlatformDxe/AcpiPlatformDxe.inf
  INF RuleOverride=ACPITABLE $(PLATFORM_PACKAGE)/AcpiTables/AcpiTables.inf
!endif
 #pcie config
 INF $(PLATFORM_PACKAGE)/setup/PcieConfigDxe/PcieConfigUiDxe.inf

  #
  #Logo File
  #
  FILE FREEFORM = PCD(gPhytiumPlatformTokenSpaceGuid.PcdLogoFile) {
    SECTION RAW = $(GENERAL_PACKAGE)/Library/LogoLib/PhytiumLogo_en.bmp
  }
  #
  # Bds
  #
  INF MdeModulePkg/Universal/DevicePathDxe/DevicePathDxe.inf
  INF MdeModulePkg/Universal/BdsDxe/BdsDxe.inf
  INF $(GENERAL_PACKAGE)/Setup/DisplayEngineDxe/DisplayEngineDxe.inf
  INF $(GENERAL_PACKAGE)/Setup/SetupBrowserDxe/SetupBrowserDxe.inf
  INF $(GENERAL_PACKAGE)/Setup/DriverSampleDxe/DriverSampleDxe.inf
  INF $(GENERAL_PACKAGE)/Setup/UiApp/UiApp.inf

  

!include $(GENERAL_PACKAGE)/PhytiumCommonPkg.fdf.inc
